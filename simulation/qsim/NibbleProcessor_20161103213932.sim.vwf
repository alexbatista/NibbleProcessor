/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, the Altera Quartus Prime License Agreement,
the Altera MegaCore Function License Agreement, or other 
applicable license agreement, including, without limitation, 
that your use is for the sole purpose of programming logic 
devices manufactured by Altera and sold by Altera or its 
authorized distributors.  Please refer to the applicable 
agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("EN")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("REGIN")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("REGIN[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "REGIN";
}

SIGNAL("REGIN[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "REGIN";
}

SIGNAL("REGIN[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "REGIN";
}

SIGNAL("REGOUT")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("REGOUT[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "REGOUT";
}

SIGNAL("REGOUT[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "REGOUT";
}

SIGNAL("REGOUT[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "REGOUT";
}

SIGNAL("RESET")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

TRANSITION_LIST("CLK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 10.0;
		}
	}
}

TRANSITION_LIST("EN")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 11.0;
			LEVEL 0 FOR 44.0;
			LEVEL 1 FOR 22.0;
			LEVEL 0 FOR 22.0;
			LEVEL 1 FOR 11.0;
			LEVEL 0 FOR 11.0;
			LEVEL 1 FOR 11.0;
			LEVEL 0 FOR 11.0;
			LEVEL 1 FOR 11.0;
			LEVEL 0 FOR 22.0;
			LEVEL 1 FOR 11.0;
			LEVEL 0 FOR 11.0;
			LEVEL 1 FOR 11.0;
			LEVEL 0 FOR 11.0;
			LEVEL 1 FOR 22.0;
			LEVEL 0 FOR 44.0;
			LEVEL 1 FOR 22.0;
			LEVEL 0 FOR 66.0;
			LEVEL 1 FOR 11.0;
			LEVEL 0 FOR 11.0;
			LEVEL 1 FOR 11.0;
			LEVEL 0 FOR 22.0;
			LEVEL 1 FOR 33.0;
			LEVEL 0 FOR 11.0;
			LEVEL 1 FOR 22.0;
			LEVEL 0 FOR 11.0;
			LEVEL 1 FOR 11.0;
			LEVEL 0 FOR 11.0;
			LEVEL 1 FOR 11.0;
			LEVEL 0 FOR 22.0;
			LEVEL 1 FOR 11.0;
			LEVEL 0 FOR 11.0;
			LEVEL 1 FOR 55.0;
			LEVEL 0 FOR 22.0;
			LEVEL 1 FOR 22.0;
			LEVEL 0 FOR 11.0;
			LEVEL 1 FOR 11.0;
			LEVEL 0 FOR 44.0;
			LEVEL 1 FOR 44.0;
			LEVEL 0 FOR 22.0;
			LEVEL 1 FOR 11.0;
			LEVEL 0 FOR 11.0;
			LEVEL 1 FOR 11.0;
			LEVEL 0 FOR 11.0;
			LEVEL 1 FOR 11.0;
			LEVEL 0 FOR 11.0;
			LEVEL 1 FOR 22.0;
			LEVEL 0 FOR 11.0;
			LEVEL 1 FOR 22.0;
			LEVEL 0 FOR 33.0;
			LEVEL 1 FOR 22.0;
			LEVEL 0 FOR 10.0;
		}
	}
}

TRANSITION_LIST("REGIN[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 21.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 21.0;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 21.0;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 21.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 35.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 21.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 21.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 6.0;
		}
	}
}

TRANSITION_LIST("REGIN[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 21.0;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 49.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 21.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 35.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 21.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 13.0;
		}
	}
}

TRANSITION_LIST("REGIN[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 35.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 21.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 42.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 35.0;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 21.0;
			LEVEL 0 FOR 21.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 21.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 55.0;
		}
	}
}

TRANSITION_LIST("REGOUT[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 75.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 180.0;
			LEVEL 0 FOR 180.0;
			LEVEL 1 FOR 90.0;
			LEVEL 0 FOR 210.0;
			LEVEL 1 FOR 90.0;
			LEVEL 0 FOR 25.0;
		}
	}
}

TRANSITION_LIST("REGOUT[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 75.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 120.0;
			LEVEL 1 FOR 150.0;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 150.0;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 90.0;
			LEVEL 0 FOR 150.0;
			LEVEL 1 FOR 85.0;
		}
	}
}

TRANSITION_LIST("REGOUT[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 105.0;
			LEVEL 1 FOR 270.0;
			LEVEL 0 FOR 390.0;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 90.0;
			LEVEL 1 FOR 25.0;
		}
	}
}

TRANSITION_LIST("RESET")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 950.0;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "EN";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RESET";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "REGIN";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
	CHILDREN = 4, 5, 6;
}

DISPLAY_LINE
{
	CHANNEL = "REGIN[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "REGIN[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "REGIN[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "REGOUT";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
	CHILDREN = 8, 9, 10;
}

DISPLAY_LINE
{
	CHANNEL = "REGOUT[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "REGOUT[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "REGOUT[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 7;
}

TIME_BAR
{
	TIME = 75000;
	MASTER = TRUE;
}
;
